openapi: 3.0.3
info:
  title: Indexer Marketplace APIs
  description: This API implements endpoints to power data driven marketplace and game experiences
  version: '1.0'
  contact:
    name: API Support
    email: helpmebuild@immutable.com
    url: https://support.immutable.com
servers:
  - url: https://api.immutable.com
    description: Production`
  - url: https://api.sandbox.immutable.com
    description: Sandbox
  - url: https://api.dev.immutable.com
    description: Development
tags:
  - name: pricing
    description: Pricing Endpoints
  - name: stacks
    description: Stacks Endpoints
paths:
  /experimental/chains/{chain_name}/search/nfts:
    get:
      x-hide-from-sdk: false
      tags:
        - stacks
      operationId: SearchNFTs
      summary: 'Experimental: Search NFTs'
      description: '![Experimental](https://img.shields.io/badge/status-experimental-yellow) Search NFTs'
      parameters:
        - name: chain_name
          description: The name of chain
          schema:
            $ref: '#/components/schemas/ChainName'
          in: path
          required: true
          examples:
            testnet:
              value: imtbl-zkevm-testnet
              summary: Immutable zkEVM Public Testnet
        - name: account_address
          in: query
          required: false
          description: Account address to filter by
          schema:
            type: string
            pattern: ^0x[a-fA-F0-9]{40}$
            example: '0xe9b00a87700f660e46b6f5deaa1232836bcc07d3'
        - name: stack_id
          in: query
          required: false
          description: Filters NFTs that belong to any of these stacks
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 7053e765-c119-4efb-b5cf-405ccccaf6c4
            minItems: 1
            maxItems: 20
        - name: only_include_owner_listings
          in: query
          required: false
          description: Whether the listings should include only the owner created listings
          schema:
            type: boolean
            example: true
        - name: page_size
          in: query
          required: false
          description: Number of results to return per page
          schema:
            $ref: '#/components/schemas/PageSize'
        - name: page_cursor
          in: query
          description: Encoded page cursor to retrieve previous or next page. Use the value returned in the response.
          required: false
          schema:
            $ref: '#/components/schemas/PageCursor'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNFTsResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorisedRequest'
        '403':
          $ref: '#/components/responses/ForbiddenRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /experimental/chains/{chain_name}/search/stacks:
    get:
      x-hide-from-sdk: false
      tags:
        - stacks
      operationId: SearchStacks
      summary: 'Experimental: Search NFT stacks'
      description: '![Experimental](https://img.shields.io/badge/status-experimental-yellow) Search NFT stacks'
      parameters:
        - name: chain_name
          description: The name of chain
          schema:
            $ref: '#/components/schemas/ChainName'
          in: path
          required: true
          examples:
            testnet:
              value: imtbl-zkevm-testnet
              summary: Immutable zkEVM Public Testnet
        - name: contract_address
          in: query
          required: true
          description: List of contract addresses to filter by
          schema:
            type: array
            items:
              type: string
              pattern: ^0x[a-fA-F0-9]{40}$
              example: '0xe9b00a87700f660e46b6f5deaa1232836bcc07d3'
            maxItems: 20
            minItems: 1
        - name: account_address
          in: query
          required: false
          description: Account address to filter by
          schema:
            type: string
            pattern: ^0x[a-fA-F0-9]{40}$
            example: '0xe9b00a87700f660e46b6f5deaa1232836bcc07d3'
        - name: only_include_owner_listings
          in: query
          required: false
          description: Whether to the listings should include only the owner created listings
          schema:
            type: boolean
            example: true
        - name: only_if_has_active_listings
          in: query
          required: false
          description: Filters results to include only stacks that have a current active listing. False and 'null' return all unfiltered stacks.
          schema:
            type: boolean
            example: true
        - name: trait
          in: query
          required: false
          description: 'JSON encoded traits to filter by. e.g. encodeURIComponent(JSON.stringify({"rarity": {"values": ["common", "rare"], "condition": "eq"}}))'
          schema:
            type: string
        - name: keyword
          in: query
          required: false
          description: Keyword to search NFT name and description. Alphanumeric characters only.
          schema:
            type: string
            example: sword
        - name: sort_by
          in: query
          required: false
          description: Sort results in a specific order
          schema:
            type: string
            nullable: false
            enum:
              - cheapest_first
        - name: page_size
          in: query
          required: false
          description: Number of results to return per page
          schema:
            $ref: '#/components/schemas/PageSize'
        - name: page_cursor
          in: query
          description: Encoded page cursor to retrieve previous or next page. Use the value returned in the response.
          required: false
          schema:
            $ref: '#/components/schemas/PageCursor'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchStacksResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorisedRequest'
        '403':
          $ref: '#/components/responses/ForbiddenRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /experimental/chains/{chain_name}/quotes/{contract_address}/stacks:
    get:
      x-hide-from-sdk: false
      tags:
        - pricing
      operationId: QuotesForStacks
      summary: 'Experimental: Get pricing data for a list of stack ids'
      description: '![Experimental](https://img.shields.io/badge/status-experimental-yellow) Get pricing data for a list of stack ids'
      parameters:
        - name: chain_name
          description: The name of chain
          schema:
            $ref: '#/components/schemas/ChainName'
          in: path
          required: true
          examples:
            testnet:
              value: imtbl-zkevm-testnet
              summary: Immutable zkEVM Public Testnet
        - name: contract_address
          in: path
          required: true
          description: Contract address for collection that these stacks are on
          schema:
            pattern: ^0x[a-fA-F0-9]{40}$
            type: string
        - name: stack_id
          in: query
          required: true
          description: List of stack ids to get pricing data for
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 7053e765-c119-4efb-b5cf-405ccccaf6c4
            minItems: 1
            maxItems: 20
        - name: page_cursor
          in: query
          description: Encoded page cursor to retrieve previous or next page. Use the value returned in the response.
          required: false
          schema:
            $ref: '#/components/schemas/PageCursor'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotesForStacksResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorisedRequest'
        '403':
          $ref: '#/components/responses/ForbiddenRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /experimental/chains/{chain_name}/quotes/{contract_address}/nfts:
    get:
      x-hide-from-sdk: false
      tags:
        - pricing
      operationId: QuotesForNFTs
      summary: 'Experimental: Get pricing data for a list of token ids'
      description: '![Experimental](https://img.shields.io/badge/status-experimental-yellow) Get pricing data for a list of token ids'
      parameters:
        - name: chain_name
          description: The name of chain
          schema:
            $ref: '#/components/schemas/ChainName'
          in: path
          required: true
          examples:
            testnet:
              value: imtbl-zkevm-testnet
              summary: Immutable zkEVM Public Testnet
        - name: contract_address
          in: path
          required: true
          description: Contract address for collection that these token ids are on
          schema:
            type: string
            pattern: ^0x[a-fA-F0-9]{40}$
        - name: token_id
          in: query
          required: true
          description: List of token ids to get pricing data for
          schema:
            type: array
            items:
              type: string
              example: '1337'
            minItems: 1
            maxItems: 20
        - name: page_cursor
          in: query
          description: Encoded page cursor to retrieve previous or next page. Use the value returned in the response.
          required: false
          schema:
            $ref: '#/components/schemas/PageCursor'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotesForNFTsResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorisedRequest'
        '403':
          $ref: '#/components/responses/ForbiddenRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v1/internal/chains/{chain_name}/backfill:
    post:
      x-internal: false
      x-hide-from-sdk: false
      tags:
        - stacks
      operationId: Backfill
      summary: Backfills or re-indexes a given entity
      description: Backfills or re-indexes a given entity
      parameters:
        - name: chain_name
          description: The name of chain
          schema:
            $ref: '#/components/schemas/ChainName'
          in: path
          required: true
          examples:
            testnet:
              value: imtbl-zkevm-testnet
              summary: Immutable zkEVM Public Testnet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackfillRequest'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    ImmutableApiKey:
      x-go-name: ImmutableApiKey
      type: apiKey
      in: header
      name: x-immutable-api-key
  schemas:
    ChainName:
      type: string
      description: The name of chain
      example: imtbl-zkevm-testnet
    PageSize:
      type: integer
      format: int32
      description: Maximum number of items to return
      minimum: 1
      default: 100
      maximum: 200
      example: 10
    PageCursor:
      type: string
      description: Encoded page cursor to retrieve previous or next page. Use the value returned in the response.
      example: ewogICJ0eXBlIjogInByZXYiLAogICJpdGVtIjogewogICAgImlkIjogNjI3NTEzMCwKICAgICJjcmVhdGVkX2F0IjogIjIwMjItMDktMTNUMTc6MDQ6MTIuMDI0MTI2WiIKICB9Cn0=
    Chain:
      type: object
      description: The chain details
      properties:
        id:
          type: string
          description: The id of chain
          example: eip155:13372
        name:
          type: string
          description: The name of chain
          example: imtbl-zkevm-testnet
      required:
        - id
        - name
    NFTMetadataAttribute:
      type: object
      properties:
        display_type:
          description: Display type for this attribute
          type: string
          nullable: true
          enum:
            - number
            - boost_percentage
            - boost_number
            - date
          example: number
        trait_type:
          description: The metadata trait type
          type: string
          example: Aqua Power
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
          description: The metadata trait value
          example: Happy
      required:
        - trait_type
        - value
    NFTWithStack:
      type: object
      description: Stack
      properties:
        token_id:
          description: Token id of NFT (uint256 as string)
          type: string
        stack_id:
          type: string
          format: uuid
          description: Stack ID
        chain:
          $ref: '#/components/schemas/Chain'
        contract_address:
          type: string
          description: Contract address
        created_at:
          type: string
          format: date-time
          example: '2022-08-16T17:43:26.991388Z'
          description: When the metadata was created
        updated_at:
          type: string
          format: date-time
          description: When the metadata was last updated
          example: '2022-08-16T17:43:26.991388Z'
        name:
          type: string
          nullable: true
          example: Sword
          description: The name of the NFT
        description:
          type: string
          nullable: true
          example: '2022-08-16T17:43:26.991388Z'
          description: The description of the NFT
        image:
          type: string
          nullable: true
          description: The image url of the NFT
          example: https://some-url
        external_url:
          type: string
          nullable: true
          description: The external website link of NFT
          example: https://some-url
        animation_url:
          type: string
          nullable: true
          description: The animation url of the NFT
          example: https://some-url
        youtube_url:
          type: string
          nullable: true
          description: The youtube URL of NFT
          example: https://some-url
        attributes:
          type: array
          description: List of Metadata attributes
          nullable: true
          items:
            $ref: '#/components/schemas/NFTMetadataAttribute'
        balance:
          type: integer
          description: Balance of NFT
          minimum: 1
          nullable: true
      required:
        - token_id
        - stack_id
        - chain
        - contract_address
        - updated_at
        - created_at
        - name
        - description
        - image
        - external_url
        - animation_url
        - youtube_url
        - attributes
        - balance
    MarketPriceNativeToken:
      type: object
      properties:
        type:
          type: string
          description: Token type user is offering, which in this case is the native IMX token
          example: NATIVE
          enum:
            - NATIVE
        symbol:
          nullable: true
          type: string
          description: The symbol of token
          example: IMX
      required:
        - type
        - symbol
    MarketPriceERC20Token:
      type: object
      properties:
        type:
          type: string
          description: Token type user is offering, which in this case is ERC20
          example: ERC20
          enum:
            - ERC20
        contract_address:
          type: string
          description: Address of ERC20 token
          example: '0x0165878A594ca255338adfa4d48449f69242Eb8F'
          pattern: ^0x[a-fA-F0-9]{40}$
        symbol:
          nullable: true
          type: string
          description: The symbol of token
          example: ETH
        decimals:
          nullable: true
          type: integer
          description: The decimals of token
          example: 18
      required:
        - type
        - contract_address
        - symbol
        - decimals
    PaymentAmount:
      type: object
      description: Amount details
      properties:
        value:
          type: string
          description: The token amount value. This value is provided in the smallest unit of the token (e.g. wei for ETH)
          example: '9750000000000000000'
          pattern: \d+
        value_in_eth:
          type: string
          description: The token amount value in ETH
          example: '9750000000000000000'
          pattern: \d+
      required:
        - value
        - value_in_eth
    MarketPriceFees:
      type: object
      properties:
        amount:
          type: string
          description: Fee in the payment currency
          example: '1000000000000000000'
        type:
          type: string
          description: Fee type
          example: ROYALTY
          enum:
            - ROYALTY
            - MAKER_ECOSYSTEM
            - TAKER_ECOSYSTEM
            - PROTOCOL
        recipient_address:
          type: string
          description: Wallet address of fee recipient
          example: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92233'
          pattern: ^0x[a-fA-F0-9]{40}$
      example:
        amount: '1000000000000000000'
        type: ROYALTY
        recipient_address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92233'
      required:
        - type
        - amount
        - recipient_address
    MarketPriceDetails:
      type: object
      description: Market Price details
      properties:
        token:
          description: Token details
          oneOf:
            - $ref: '#/components/schemas/MarketPriceNativeToken'
            - $ref: '#/components/schemas/MarketPriceERC20Token'
          discriminator:
            propertyName: type
            mapping:
              NATIVE: '#/components/schemas/MarketPriceNativeToken'
              ERC20: '#/components/schemas/MarketPriceERC20Token'
        amount:
          $ref: '#/components/schemas/PaymentAmount'
        fee_inclusive_amount:
          $ref: '#/components/schemas/PaymentAmount'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/MarketPriceFees'
          example:
            - type: TAKER_ECOSYSTEM
              recipient_address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92233'
              amount: '1000000000000000000'
      required:
        - token
        - amount
        - fee_inclusive_amount
        - fees
    Listing:
      type: object
      description: Listing
      properties:
        listing_id:
          type: string
          description: Global Order identifier
          example: 018792C9-4AD7-8EC4-4038-9E05C598534A
        price_details:
          $ref: '#/components/schemas/MarketPriceDetails'
        token_id:
          type: string
          description: Token ID
          example: '1'
        creator:
          type: string
          description: ETH Address of listing creator
          example: '0xe9b00a87700f660e46b6f5deaa1232836bcc07d3'
        amount:
          type: string
          description: Amount of token included in the listing
          example: '1'
      required:
        - listing_id
        - price_details
        - creator
        - token_id
        - amount
    LastTrade:
      type: object
      nullable: true
      description: Last trade
      properties:
        trade_id:
          type: string
          description: Trade ID
          format: uuid
          example: 4e28df8d-f65c-4c11-ba04-6a9dd47b179b
        token_id:
          type: string
          description: Token id of the traded asset (uint256 as string)
          example: '1'
        price_details:
          type: array
          description: Price details, list of payments involved in this trade
          items:
            $ref: '#/components/schemas/MarketPriceDetails'
        amount:
          type: string
          description: Amount of the trade (uint256 as string)
          example: '1'
        created_at:
          type: string
          format: date-time
          description: When the trade was created
          example: '2022-08-16T17:43:26.991388Z'
      required:
        - trade_id
        - token_id
        - price_details
        - amount
        - created_at
    Market:
      type: object
      description: Market data
      properties:
        floor_listing:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Listing'
        last_trade:
          $ref: '#/components/schemas/LastTrade'
      required:
        - floor_listing
        - last_trade
    NFTBundle:
      type: object
      description: NFT bundle includes NFT with stack, markets and listings
      properties:
        nft_with_stack:
          $ref: '#/components/schemas/NFTWithStack'
        market:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Market'
        listings:
          type: array
          description: List of open listings for the stack.
          maxItems: 10
          items:
            $ref: '#/components/schemas/Listing'
      required:
        - nft_with_stack
        - market
        - listings
    Page:
      type: object
      description: Pagination properties
      properties:
        previous_cursor:
          type: string
          nullable: true
          description: First item as an encoded string
          example: ewogICJ0eXBlIjogInByZXYiLAogICJpdGVtIjogewogICAgImlkIjogNjI3NTEzMCwKICAgICJjcmVhdGVkX2F0IjogIjIwMjItMDktMTNUMTc6MDQ6MTIuMDI0MTI2WiIKICB9Cn0=
        next_cursor:
          type: string
          nullable: true
          description: Last item as an encoded string
          example: ewogICJ0eXBlIjogInByZXYiLAogICJpdGVtIjogewogICAgImlkIjogNjI3NTEzMCwKICAgICJjcmVhdGVkX2F0IjogIjIwMjItMDktMTNUMTc6MDQ6MTIuMDI0MTI2WiIKICB9Cn0=
      required:
        - previous_cursor
        - next_cursor
    SearchNFTsResult:
      type: object
      description: Search NFTs result
      properties:
        result:
          type: array
          description: List of nft bundles
          items:
            $ref: '#/components/schemas/NFTBundle'
        page:
          $ref: '#/components/schemas/Page'
      required:
        - result
        - page
    BasicAPIError:
      type: object
      properties:
        message:
          type: string
          description: Error Message
          example: all fields must be provided
        link:
          type: string
          description: Link to IMX documentation that can help resolve this error
          example: https://docs.x.immutable.com/reference/#/
        trace_id:
          type: string
          description: Trace ID of the initial request
          example: e47634b79a5cd6894ddc9639ec4aad26
      required:
        - message
        - link
        - trace_id
    APIError400:
      allOf:
        - $ref: '#/components/schemas/BasicAPIError'
        - type: object
          properties:
            code:
              type: string
              description: Error Code
              enum:
                - VALIDATION_ERROR
              example: VALIDATION_ERROR
            details:
              type: object
              nullable: true
              description: Additional details to help resolve the error
          required:
            - code
            - details
    APIError401:
      allOf:
        - $ref: '#/components/schemas/BasicAPIError'
        - type: object
          properties:
            code:
              type: string
              description: Error Code
              enum:
                - UNAUTHORISED_REQUEST
              example: UNAUTHORISED_REQUEST
            details:
              type: object
              nullable: true
              description: Additional details to help resolve the error
          required:
            - code
            - details
    APIError403:
      allOf:
        - $ref: '#/components/schemas/BasicAPIError'
        - type: object
          properties:
            code:
              type: string
              description: Error Code
              enum:
                - AUTHENTICATION_ERROR
              example: AUTHENTICATION_ERROR
            details:
              type: object
              nullable: true
              description: Additional details to help resolve the error
          required:
            - code
            - details
    APIError404:
      allOf:
        - $ref: '#/components/schemas/BasicAPIError'
        - type: object
          properties:
            code:
              type: string
              description: Error Code
              enum:
                - RESOURCE_NOT_FOUND
              example: RESOURCE_NOT_FOUND
            details:
              type: object
              nullable: true
              description: Additional details to help resolve the error
          required:
            - code
            - details
    APIError429:
      allOf:
        - $ref: '#/components/schemas/BasicAPIError'
        - type: object
          properties:
            code:
              type: string
              description: Error Code
              enum:
                - TOO_MANY_REQUESTS_ERROR
              example: TOO_MANY_REQUESTS_ERROR
            details:
              type: object
              nullable: true
              description: Additional details to help resolve the error
          required:
            - code
            - details
    APIError500:
      allOf:
        - $ref: '#/components/schemas/BasicAPIError'
        - type: object
          properties:
            code:
              type: string
              description: Error Code
              enum:
                - INTERNAL_SERVER_ERROR
              example: INTERNAL_SERVER_ERROR
            details:
              type: object
              nullable: true
              description: Additional details to help resolve the error
          required:
            - code
            - details
    Stack:
      type: object
      description: Stack
      properties:
        stack_id:
          type: string
          format: uuid
          description: Stack ID
        chain:
          $ref: '#/components/schemas/Chain'
        contract_address:
          type: string
          description: Contract address
        created_at:
          type: string
          format: date-time
          example: '2022-08-16T17:43:26.991388Z'
          description: When the metadata was created
        updated_at:
          type: string
          format: date-time
          description: When the metadata was last updated
          example: '2022-08-16T17:43:26.991388Z'
        name:
          type: string
          nullable: true
          example: Sword
          description: The name of the NFT
        description:
          type: string
          nullable: true
          example: '2022-08-16T17:43:26.991388Z'
          description: The description of the NFT
        image:
          type: string
          nullable: true
          description: The image url of the NFT
          example: https://some-url
        external_url:
          type: string
          nullable: true
          description: The external website link of NFT
          example: https://some-url
        animation_url:
          type: string
          nullable: true
          description: The animation url of the NFT
          example: https://some-url
        youtube_url:
          type: string
          nullable: true
          description: The youtube URL of NFT
          example: https://some-url
        attributes:
          type: array
          description: List of Metadata attributes
          nullable: true
          items:
            $ref: '#/components/schemas/NFTMetadataAttribute'
      required:
        - stack_id
        - chain
        - contract_address
        - updated_at
        - created_at
        - name
        - description
        - image
        - external_url
        - animation_url
        - youtube_url
        - attributes
    StackBundle:
      type: object
      description: Stack bundle includes stacks, markets and listings
      properties:
        stack:
          $ref: '#/components/schemas/Stack'
        stack_count:
          type: integer
          description: Total count of NFTs in the stack matching the filter params
          example: 1
        market:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Market'
        listings:
          type: array
          description: List of open listings for the stack.
          maxItems: 10
          items:
            $ref: '#/components/schemas/Listing'
      required:
        - stack
        - stack_count
        - market
        - listings
    SearchStacksResult:
      type: object
      description: Search stacks result
      properties:
        result:
          type: array
          description: List of stack bundles
          items:
            $ref: '#/components/schemas/StackBundle'
        page:
          $ref: '#/components/schemas/Page'
      required:
        - result
        - page
    StackQuoteResult:
      type: object
      description: Stack quote result
      properties:
        chain:
          $ref: '#/components/schemas/Chain'
        stack_id:
          format: uuid
          type: string
        market_stack:
          $ref: '#/components/schemas/Market'
        market_collection:
          $ref: '#/components/schemas/Market'
      required:
        - stack_id
        - market_stack
        - market_collection
        - chain
    QuotesForStacksResult:
      type: object
      description: Quotes for stacks result
      properties:
        result:
          type: array
          description: List of quotes
          items:
            $ref: '#/components/schemas/StackQuoteResult'
        page:
          $ref: '#/components/schemas/Page'
      required:
        - result
        - page
    MarketNft:
      type: object
      description: NFT market data
      properties:
        last_trade:
          $ref: '#/components/schemas/LastTrade'
      required:
        - last_trade
    NFTQuoteResult:
      type: object
      description: NFT quote result
      properties:
        chain:
          $ref: '#/components/schemas/Chain'
        token_id:
          description: Token id of NFT (uint256 as string)
          type: string
        market_stack:
          $ref: '#/components/schemas/Market'
        market_nft:
          $ref: '#/components/schemas/MarketNft'
        market_collection:
          $ref: '#/components/schemas/Market'
      required:
        - token_id
        - market_stack
        - market_nft
        - market_collection
        - chain
    QuotesForNFTsResult:
      type: object
      description: Quotes for NFTs result
      properties:
        result:
          type: array
          description: List of quotes
          items:
            $ref: '#/components/schemas/NFTQuoteResult'
        page:
          $ref: '#/components/schemas/Page'
      required:
        - result
        - page
    BackfillRequest:
      type: object
      description: Backfill request
      properties:
        entity:
          type: string
          description: The entity to be backfilled
        api-url:
          type: string
          description: The indexer url for the given chain and entity
          example: https://indexer-mr.dev.imtbl.com
      required:
        - entity
        - api-url
  responses:
    BadRequest:
      description: Bad Request (400)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError400'
    UnauthorisedRequest:
      description: Unauthorised Request (401)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError401'
    ForbiddenRequest:
      description: Forbidden Request (403)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError403'
    NotFound:
      description: The specified resource was not found (404)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError404'
    TooManyRequests:
      description: Too Many Requests (429)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError429'
      headers:
        Retry-After:
          $ref: '#/components/headers/RetryAfter'
    InternalServerError:
      description: Internal Server Error (500)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError500'
  headers:
    RetryAfter:
      description: The number of seconds until the next request can be made.
      schema:
        type: string
