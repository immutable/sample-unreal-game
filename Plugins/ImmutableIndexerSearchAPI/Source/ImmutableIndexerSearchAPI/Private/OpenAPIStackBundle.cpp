/**
 * Indexer Marketplace APIs
 * This API implements endpoints to power data driven marketplace and game experiences
 *
 * OpenAPI spec version: 1.0
 * Contact: helpmebuild@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIStackBundle.h"

#include "ImmutableIndexerSearchAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace ImmutableIndexerSearchAPI
{

void OpenAPIStackBundle::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("stack")); WriteJsonValue(Writer, Stack);
	Writer->WriteIdentifierPrefix(TEXT("stack_count")); WriteJsonValue(Writer, StackCount);
	if (Market.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("market")); WriteJsonValue(Writer, Market.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("listings")); WriteJsonValue(Writer, Listings);
	Writer->WriteObjectEnd();
}

bool OpenAPIStackBundle::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("stack"), Stack);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("stack_count"), StackCount);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("market"), Market);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("listings"), Listings);

	return ParseSuccess;
}

}
