/**
 * Indexer Marketplace APIs
 * This API implements endpoints to power data driven marketplace and game experiences
 *
 * OpenAPI spec version: 1.0
 * Contact: helpmebuild@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIPricingApi.h"

#include "OpenAPIAPIError400.h"
#include "OpenAPIAPIError401.h"
#include "OpenAPIAPIError403.h"
#include "OpenAPIAPIError404.h"
#include "OpenAPIAPIError429.h"
#include "OpenAPIAPIError500.h"
#include "OpenAPIQuotesForNFTsResult.h"
#include "OpenAPIQuotesForStacksResult.h"

namespace ImmutableIndexerSearchAPI
{

/* Experimental: Get pricing data for a list of token ids
 *
 * ![Experimental](https://img.shields.io/badge/status-experimental-yellow) Get pricing data for a list of token ids
*/
class IMMUTABLEINDEXERSEARCHAPI_API OpenAPIPricingApi::QuotesForNFTsRequest : public Request
{
public:
    virtual ~QuotesForNFTsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The name of chain */
	FString ChainName;
	/* Contract address for collection that these token ids are on */
	FString ContractAddress;
	/* List of token ids to get pricing data for */
	TArray<FString> TokenId;
	/* Encoded page cursor to retrieve previous or next page. Use the value returned in the response. */
	TOptional<FString> PageCursor;
};

class IMMUTABLEINDEXERSEARCHAPI_API OpenAPIPricingApi::QuotesForNFTsResponse : public Response
{
public:
    virtual ~QuotesForNFTsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIQuotesForNFTsResult Content;
};

/* Experimental: Get pricing data for a list of stack ids
 *
 * ![Experimental](https://img.shields.io/badge/status-experimental-yellow) Get pricing data for a list of stack ids
*/
class IMMUTABLEINDEXERSEARCHAPI_API OpenAPIPricingApi::QuotesForStacksRequest : public Request
{
public:
    virtual ~QuotesForStacksRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The name of chain */
	FString ChainName;
	/* Contract address for collection that these stacks are on */
	FString ContractAddress;
	/* List of stack ids to get pricing data for */
	TArray<FGuid> StackId;
	/* Encoded page cursor to retrieve previous or next page. Use the value returned in the response. */
	TOptional<FString> PageCursor;
};

class IMMUTABLEINDEXERSEARCHAPI_API OpenAPIPricingApi::QuotesForStacksResponse : public Response
{
public:
    virtual ~QuotesForStacksResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIQuotesForStacksResult Content;
};

}
